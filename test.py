import datetime
import os
import random
import time

import telebot
from telebot import types

import config

bot = telebot.TeleBot(config.TOKEN)


@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('/Users/timur/Desktop/botik/welcome.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)
    

    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º –¥–æ 100")
    item2 = types.KeyboardButton("üòâ–ö–∞–∫ —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å?")
    item3 = types.KeyboardButton("üéµ–£–≥–∞–¥–∞–π –º–µ–ª–æ–¥–∏—é")
    item4 = types.KeyboardButton("üï≥–ö–∏–Ω—É—Ç—å –º–æ–Ω–µ—Ç–∫—É")
    item5 = types.KeyboardButton("üìù–ê –∫–∞–∫–æ–π –ø–ª–∞–Ω?")
    item6 = types.KeyboardButton("üòî–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å")
    markup.add(item1, item2, item3, item4, item5, item6)

    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –ø–æ–ª–µ–∑–Ω—ã–π –±–æ—Ç, –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–æ–∑–¥–∞–ª "
                     "–¢–∏–º—É—Ä. –û–Ω –º–æ–π –ª—É—á—à–∏–π –¥—Ä—É–≥:)".format(message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=["voice"])
def content_text(message):
    bot.send_message(message.chat.id, 'üòÑ–î–∞–≤–∞–π –Ω–µ –ª–µ–Ω–∏—Å—å, –ø–∏—à–∏ –ø–∞–ª—å—á–∏–∫–∞–º–∏')


@bot.message_handler(content_types=['text'])
def take(message):
    if message.chat.type == 'private':
        if message.text == 'üé≤ –†–∞–Ω–¥–æ–º –¥–æ 100':
            bot.send_message(message.chat.id, str(random.randint(0, 100)))
        elif message.text == 'üòâ–ö–∞–∫ —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å?':
            markup = types.InlineKeyboardMarkup(row_width=5)
            item1 = types.InlineKeyboardButton("10", callback_data='10')
            item2 = types.InlineKeyboardButton("9", callback_data='9')
            item3 = types.InlineKeyboardButton("8", callback_data='8')
            item4 = types.InlineKeyboardButton("7", callback_data='7')
            item5 = types.InlineKeyboardButton("6", callback_data='6')
            item6 = types.InlineKeyboardButton("5", callback_data='5')
            item7 = types.InlineKeyboardButton("4", callback_data='4')
            item8 = types.InlineKeyboardButton("3", callback_data='3')
            item9 = types.InlineKeyboardButton("2", callback_data='2')
            item10 = types.InlineKeyboardButton("1", callback_data='1')

            markup.add(item1, item2, item3, item4, item5, item6, item7, item8, item9, item10)
            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)

        elif message.text == 'üéµ–£–≥–∞–¥–∞–π –º–µ–ª–æ–¥–∏—é':
            for file in os.listdir('music/'):
                if file.split('.')[-1] == 'ogg':
                    f = open('music/' + file, 'rb')
                    msg = bot.send_voice(message.chat.id, f, None)
                time.sleep(3)

        elif message.text == 'üï≥–ö–∏–Ω—É—Ç—å –º–æ–Ω–µ—Ç–∫—É':
            recoin = random.randint(0, 1)
            coin = "–û—Ä—ë–ª" if recoin else "–†–µ—à–∫–∞"
            bot.send_message(message.chat.id, str(coin))

        elif message.text == 'üìù–ê –∫–∞–∫–æ–π –ø–ª–∞–Ω?':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Ç–∞—Å–∫—É",
                                               callback_data='done' if message.text != ' ' else '–¢—ã –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–±–∞–≤–∏–ª')
            item2 = types.InlineKeyboardButton("–£–±—Ä–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ", callback_data='clear')

            markup.add(item1, item2)
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π –∏–∑–º–µ–Ω–∏–º', reply_markup=markup)

        elif message.text == '–î–æ–±–∞–≤–∏—Ç—å —Ç–∞—Å–∫—É':
                task = '–î–æ–±–∞–≤–ª–µ–Ω–æ‚úÖ' if message.text != (' ' or '') else '–¢—ã –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–±–∞–≤–∏–ª'
                bot.send_message(message.chat.id, task, reply_markup=markup)

        elif message.text == '–£–±—Ä–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ':
                task = '–£–±—Ä–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ'
                bot.send_message(message.chat.id, task, reply_markup=markup)
        elif message.text == 'üòî–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å':
            bot.send_message(message.chat.id, 'üö®–£–∂–µ –≤—ã–µ—Ö–∞–ª–∞ –æ–±—å—è—Å–Ω–∏—Ç–µ–ª—å–Ω–∞—è –±—Ä–∏–≥–∞–¥–∞')

        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å, –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑—É–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É üò¢')


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == '10':
                bot.send_message(call.message.chat.id, '–í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ, —Ç—ã —Å—á–∞—Å—Ç–ª–∏–≤')
            elif call.data == '9':
                bot.send_message(call.message.chat.id, '–í–æ—Ç —Ç–∞–∫ –µ–≥–æ')
            elif call.data == '8':
                bot.send_message(call.message.chat.id, '–î–∞–≤–∞–π –µ—â—ë')
            elif call.data == '7':
                bot.send_message(call.message.chat.id, '–®–æ—É —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è')
            elif call.data == '6':
                bot.send_message(call.message.chat.id, '–ù–æ—Ä–º–∞–ª—å–Ω–æ')
            elif call.data == '5':
                bot.send_message(call.message.chat.id, '–ú–æ–≥–ª–æ –±—ã—Ç—å –∏ –ª—É—á—à–µ')
            elif call.data == '4':
                bot.send_message(call.message.chat.id, '–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –∏—Å–ø—Ä–∞–≤–ª—è–π')
            elif call.data == '3':
                bot.send_message(call.message.chat.id, '–ë–ª–∏–∏–∏–Ω')
            elif call.data == '2':
                bot.send_message(call.message.chat.id, '–î–∞–≤–∞–π –±–µ–∑ –¥–µ–ø—Ä–µ—Å—Å–∏–π')
            elif call.data == '1':
                bot.send_message(call.message.chat.id, '–ù–∞—à –∫–æ—Ä–∞–±–ª—å –∏–¥—ë—Ç –∫–æ –¥–Ω—É')

            elif call.data == 'done':
                bot.send_message(call.message.chat.id, '–î–æ–±–∞–≤–ª–µ–Ω–æ‚úÖ')
            elif call.data == 'clear':
                bot.send_message(call.message.chat.id, '–£–±—Ä–∞–Ω–æ‚úÖ')

            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=" –ü—Ä–∏–Ω—è—Ç–æ) ",
                                  reply_markup=None)

            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                      text="–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Å —Ç–æ–±–æ–π –æ–±—â–∞—Ç—å—Å—è!")

    except Exception as e:
        print(repr(e))


# RUN
bot.polling(none_stop=True)
